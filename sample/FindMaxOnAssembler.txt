стек - храним  данные
обратный стек - храним метки переходами

Исходный массив предзаписан в прямой стэк
0 POP_STACK # Берём верхнее значение стэка и пишем в первую ячейку памяти *
1 PUSH_PC_REVSTACK # Записываем pc в обратный стек *
2 СMP_MEM_STACK # Сравниваем верхнее значение стека с ячейкой в памяти *
3 PUSH_PC_REVSTACK # Записываем ещё одно pc в обратный стек [pc = 3] *
4 ADD_REVSTACK_2 # Увеличиваем верхнее значение обратного стека на 3 * [pc = 6]
6 POP_STACK_IF_S # Заносим верхнее значение из стека в память, если нет, то удаляем его без занесения в память*
[Перейдёт сюда] 7 CHECK_STACK_NOT_EMPTY # Проверяем, что стек не пуст. Если стек пуст, то поднимаем флаг EF *
8 JNE_RS # Возвращаемся в начало программы (новая итерация цикла)
9 END # Результат работы программы будет в ячейке [0]
