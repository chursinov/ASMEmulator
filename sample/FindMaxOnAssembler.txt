A - максимум
B - сравниваемое число
С - длина массива
D
E
F
G

DP - указатель данных
DP = 128
РОНы для меток [MARK_X]:
MARK_A - метка начала цикла
MARK_B - метка FALSE условия проверки СРАВНИВАЕМОЕ ЧИСЛО > МАКСИМУМ
MARK_C - метка TRUE условия проверки СРАВНИВАЕМОЕ ЧИСЛО > МАКСИМУМ

Флаги SF - Флаг знака, ZF - Флаг нуля

PC = 0 | MOV_RAM_С # Запись количества элементов в регистр С
PC = 1 | INC_DP # Увеличение DP на 1. Начало данных
PC = 2 | MOV_RAM_A # 1ое число делаем максимумом, на случай если все остальные окажутся меньше чем первое
PC = 3 | INC DP # Увеличение DP на 1. Переход к второму элементу
PC = 4 | MOV_PC_MARK_A # Запоминаем метку цикла
PC = 5 | ADD_MARK_A_1 # сдвигаем метку на 1
MARK_A,PC = 6 | CMP_[C+1]_1 # Проверка на ноль (не конец массива)
PC = 7 | DCR_C # Уменьшеаем длину массива
PC = 8 | MOV RAM B # Записываем очередной элемент в B
PC = 9 | INC DP # Увеличиваем DP на 1
PC = 10 | CMP B A # Зажигаем SF если сравниваемое число больше
PC = 11 | MOV PC MARK_B # Заносим в MARK_B PC
PC = 12 | ADD MARK_B_5 # Cдвигаем метку на 1
PC = 13 | MOV PC MARK_C # Заносим в MARK_C PC
PC = 14 | ADD MARK_C 4 # Сдвигаем метку на 4
PC = 15 | JS_MARK_B  # Переходим в условие изменение максимума
PC = 16 | JMP_MARK_C
MARK_B,PC = 17 | MOV B A
MARK_C,PC = 18 | INC DP
PC = 19 | JMP MARK_A # Здесь ошибка
PC = 20 | JNZ MARK_A 
PC = 21 | END

#1 Модуль с функциями пересылки MOV_SRC_DEST
#2 Модуль с арифметическими функциями INC, DCR, ADD
#3 Модуль с условными переходами JS, JNS, JZ, JNZ, JMP



